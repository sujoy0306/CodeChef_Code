#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<string.h>
using namespace std;
long int pr[100005];
long int max(long int a,int b){
	if((a-b)>0)
		return a;
	else
		return b;
}
long int least_prime_div(long int val) {
	if(pr[val]==0){
		if(val==1){
			pr[val]=1;
			return 1;
		}
		for(long int i=2;i<=sqrt(val);i++){
			if(val%i==0){
				pr[val]=i;
				return i;
			}
		}
		pr[val]=val;
		return val;
	}
	else
		return pr[val];
}
void update(long int *arr,long int l,long int r){
	long int i;
	for(i=l;i<=r;i++){
		if(arr[i]!=1)
			arr[i]=arr[i]/(least_prime_div(arr[i]));
		//cout<<arr[i]<<endl;
	}
}
void get(long int *arr,long int l,long int r){
	long int res=1;
	for(long int i=l;i<=r;i++){
		//cout<<res<<endl;
		//cout<<arr[i]<<" ";
		if(arr[i]!=1)
			res=max(res,least_prime_div(arr[i]));
	}
	printf("%ld\n",res);
}
int main(){
	int test_case;
	scanf("%d",&test_case);
	memset(pr,0,sizeof(pr));
	while(test_case--){
		long int size,i,query,lft,rght;
		scanf("%ld %ld",&size,&query);
		long int *arr;
		arr=(long int*)malloc(size*sizeof(long int));
		for(i=0;i<size;i++){
			scanf("%ld",&arr[i]);
		}
		int type;
		while(query--){
			scanf("%d %ld %ld",&type,&lft,&rght);
			switch(type){
				case 0:update(arr,lft-1,rght-1);
					break;
				case 1:get(arr,lft-1,rght-1);
					break;
			}
		}
	}
	return(0);
}
